/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DeliveryManRole;


import Business.DeliveryMan.DeliveryMan;
import Business.DeliveryMan.DeliveryManDirectory;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.DeliveryCompanyEnterprise;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class DeliveryManWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private DeliveryCompanyEnterprise Denterprise;
    private UserAccount userAccount;
    private DeliveryManDirectory dd;
    //private Organization organization;
    private EcoSystem business;
    private ArrayList<WorkRequest> orderList;
    public WorkQueue wq;
    
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public DeliveryManWorkAreaJPanel(JPanel userProcessContainer, UserAccount account,  Enterprise enterprise ,EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.enterprise = enterprise;
        this.business = business;
        Denterprise = (DeliveryCompanyEnterprise)enterprise;
        dd = Denterprise.getDeliveryManDirectory();
        //this.organization = organization;
        //不显示deliveryman name
        for(DeliveryMan dm: dd.getdList()){
            if(dm.getUsername().equals(userAccount.getUsername())){
                valueLabel.setText(dm.getName());
            }
         }
        orderList = new ArrayList<WorkRequest>();
        //显示的work request
        wq = business.getWorkQueue();
        for(WorkRequest wr: wq.getWorkRequestList()){
            if(wr.getDeliverman().equals(userAccount)){
                orderList.add(wr);
            }
        }
        //valueLabel.setText(userAccount.get);
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) workRequestJTable.getModel();
        dtm.setRowCount(0);
        for(WorkRequest a : orderList){
            Object row[] = new Object[4];
            
            row[0] = a.getCustomer(); 
            row[1] = a.getEnterprise();
            row[2] = a.getStatus();
            SimpleDateFormat df = new SimpleDateFormat("HH:mm:ss");
            //报错吗？
            if(a.getResolveDate()!=null){
                row[3] = df.format(a.getResolveDate());
            }else{
                row[3] = "";
            }
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        valueLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        finishJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Receiver", "Status", "ResolveTime"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 380, 140));

        assignJButton.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        assignJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/image/finish.png"))); // NOI18N
        assignJButton.setText("Accept");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, 150, 40));

        valueLabel.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 80, 130, -1));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel1.setText("Delivery Man:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 130, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/image/deliverymannnn.png"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, 270, 410));

        finishJButton.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        finishJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/image/finish.png"))); // NOI18N
        finishJButton.setText("Order Finished");
        finishJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishJButtonActionPerformed(evt);
            }
        });
        add(finishJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 330, 180, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();
        
        if (selectedRow >= 0){
            WorkRequest a = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
            if(a.getStatus().equals("Wait")){
                //a.setEnterprise(userAccount);
                a.setDeliverman(userAccount);
                a.setStatus("Delivering");//    
                JOptionPane.showMessageDialog(null, "The order is assigned to this delivery man.");
                 populateTable();
            }else{
                JOptionPane.showMessageDialog(null, "The previous process must be completed first");
            }
            
            
        }else{
            JOptionPane.showMessageDialog(null, "Please select any row.","Warning", JOptionPane.WARNING_MESSAGE);
        }
        
        
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void finishJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishJButtonActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();
        
        if (selectedRow >= 0){
            WorkRequest a = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
            if(a.getStatus().equals("Delivering")){
                //a.setEnterprise(userAccount);
                a.setStatus("Delivered");//    
                JOptionPane.showMessageDialog(null, "The order is delivered by this delivery man.");
                 populateTable();
            }else{
                JOptionPane.showMessageDialog(null, "The previous process must be completed first");
            }
            
        }else{
            JOptionPane.showMessageDialog(null, "Please select any row.","Warning", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_finishJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton finishJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
